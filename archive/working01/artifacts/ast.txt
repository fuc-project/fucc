Program(Program) {
    PreprocessorDirective(#define) {
        Identifier(FOO)
        Literal(1)
    }
    FunctionDeclaration(bar) {
        Identifier(int)
        Parameters(Parameters)
        Block(Block) {
            ReturnStatement(return) {
                BinaryExpression(*) {
                    BinaryExpression(+) {
                        Literal(1)
                        Identifier(FOO)
                    }
                    Literal(2)
                }
            }
        }
    }
    FunctionDeclaration(baz) {
        Identifier(int)
        Parameters(Parameters) {
            VariableDeclaration(a) {
                Identifier(int)
            }
            VariableDeclaration(b) {
                Identifier(int)
            }
        }
        Block(Block) {
            ReturnStatement(return) {
                BinaryExpression(+) {
                    Identifier(a)
                    Identifier(b)
                }
            }
        }
    }
    FunctionDeclaration(biz) {
        Identifier(int)
        Parameters(Parameters)
        Block(Block) {
            ReturnStatement(return) {
                BinaryExpression(-) {
                    BinaryExpression(+) {
                        Literal(1)
                        BinaryExpression(*) {
                            BinaryExpression(*) {
                                Literal(3)
                                Literal(4)
                            }
                            BinaryExpression(+) {
                                BinaryExpression(/) {
                                    BinaryExpression(*) {
                                        Literal(8)
                                        Literal(3)
                                    }
                                    Literal(2)
                                }
                                Literal(1)
                            }
                        }
                    }
                    Literal(2)
                }
            }
        }
    }
    FunctionDeclaration(bap) {
        Identifier(int)
        Parameters(Parameters)
        Block(Block) {
            FunctionCall(printf) {
                FunctionCall(biz)
            }
            ReturnStatement(return) {
                Literal(0)
            }
        }
    }
    FunctionDeclaration(main) {
        Identifier(int)
        Parameters(Parameters)
        Block(Block) {
            VariableDeclaration(a) {
                Literal(5)
            }
            FunctionCall(printf) {
                BinaryExpression(+) {
                    BinaryExpression(+) {
                        Identifier(FOO)
                        Literal(1)
                    }
                    BinaryExpression(*) {
                        FunctionCall(bar)
                        FunctionCall(baz) {
                            Identifier(a)
                            Literal(4)
                        }
                    }
                }
            }
            FunctionCall(bap)
            ReturnStatement(return) {
                Literal(0)
            }
        }
    }
}